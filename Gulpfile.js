// File: Gulpfile.js'use strict';var gulp    = require('gulp'),    connect = require('gulp-connect'),    jshint  = require('gulp-jshint'),    stylish = require('jshint-stylish'),    historyApiFallback = require('connect-history-api-fallback'),    less = require('gulp-less'),    path = require('path'); // Servidor web de desarrollo gulp.task('server', function() {   connect.server({     root: './app',     hostname: '0.0.0.0',     port: 8080,     livereload: true,     middleware: function(connect, opt) {       return [ historyApiFallback ];     }   });});// Busca errores en el JS y nos los muestra por pantallagulp.task('jshint', function() {  return gulp.src('./app/js/**/*.js')    .pipe(jshint('.jshintrc'))    .pipe(jshint.reporter('jshint-stylish'))    .pipe(jshint.reporter('fail'));});// Preprocesa archivos less a CSS y recarga los cambiosgulp.task('less', function () {  return gulp.src('./app/less/main.less')    .pipe(less())    .pipe(gulp.dest('./app/css'))    .pipe(connect.reload());}); // Recarga el navegador cuando hay cambios en el HTML gulp.task('html', function() {     gulp.src('./app/**/*.html')     .pipe(connect.reload());}); // Vigila cambios que se produzcan en el coÃÅdigo // y lanza las tareas relacionadas gulp.task('watch', function() {   gulp.watch(['./app/**/*.html'], ['html']);   gulp.watch(['./app/less/**/*.less'], ['less']);   gulp.watch(['./app/js/**/*.js', './Gulpfile.js'], ['jshint']);});gulp.task('default', ['server', 'watch','less']);